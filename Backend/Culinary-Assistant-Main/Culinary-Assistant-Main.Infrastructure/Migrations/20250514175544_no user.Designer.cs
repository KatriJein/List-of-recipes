// <auto-generated />
using System;
using Culinary_Assistant_Main.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Culinary_Assistant_Main.Infrastructure.Migrations
{
    [DbContext(typeof(CulinaryAppContext))]
    [Migration("20250514175544_no user")]
    partial class nouser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("MainAppSchema")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Culinary_Assistant_Main.Domain.Models.Receipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<int>("CookingDifficulty")
                        .HasColumnType("integer");

                    b.Property<string>("CookingSteps")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CookingTime")
                        .HasColumnType("integer");

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MainPictureUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PicturesUrls")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Popularity")
                        .HasColumnType("integer");

                    b.Property<double>("Rating")
                        .HasColumnType("double precision");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Receipts", "MainAppSchema");
                });

            modelBuilder.Entity("Culinary_Assistant_Main.Domain.Models.Receipt", b =>
                {
                    b.OwnsOne("Culinary_Assistant.Core.ValueTypes.Nutrients", "Nutrients", b1 =>
                        {
                            b1.Property<Guid>("ReceiptId")
                                .HasColumnType("uuid");

                            b1.Property<double>("Calories")
                                .HasColumnType("double precision");

                            b1.Property<double>("Carbohydrates")
                                .HasColumnType("double precision");

                            b1.Property<double>("Fats")
                                .HasColumnType("double precision");

                            b1.Property<double>("Proteins")
                                .HasColumnType("double precision");

                            b1.HasKey("ReceiptId");

                            b1.ToTable("Receipts", "MainAppSchema");

                            b1.WithOwner()
                                .HasForeignKey("ReceiptId");
                        });

                    b.OwnsOne("Culinary_Assistant.Core.ValueTypes.Text", "Description", b1 =>
                        {
                            b1.Property<Guid>("ReceiptId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ReceiptId");

                            b1.ToTable("Receipts", "MainAppSchema");

                            b1.WithOwner()
                                .HasForeignKey("ReceiptId");
                        });

                    b.OwnsOne("Culinary_Assistant.Core.ValueTypes.Text", "Title", b1 =>
                        {
                            b1.Property<Guid>("ReceiptId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ReceiptId");

                            b1.ToTable("Receipts", "MainAppSchema");

                            b1.WithOwner()
                                .HasForeignKey("ReceiptId");
                        });

                    b.Navigation("Description")
                        .IsRequired();

                    b.Navigation("Nutrients")
                        .IsRequired();

                    b.Navigation("Title")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
